
# application.properties
# 개발 환경

# key=value

# port 설정
server.port=80

#레거시 web.xml encoding filter
server.servlet.encoding.charset=UTF-8 	


# spring.profiles.active=profile명 // application-{profile명}.properties
#활성화 할 프로파이 설정
spring.profiles.active=prod


######################## 다른 properties파일 import
# spring.profiles.include=profile명 // application-{profile명}.properties
spring.profiles.include=secret


##################### Log 설정
### 전역 레벨 설정  TRACE, DEBUG, INFO, WARN, ERROR 레벨 순서 일정레벨이상의 로그들만 찍음  
logging.level.root=info
# Web 요청이 발생할 경우 설정
logging.level.org.springframework.web=debug
# Web 요청이 발생한 경우 파라미터 출력 특히 POST로 넘어오는 파라미터 출력
spring.mvc.log-request-details=true

#logging.level.com.iu.home.board.qna.QnaMapper=debug

## SQL LOG
logging.level.jdbc=OFF
logging.level.jdbc.sqlonly=OFF           
logging.level.jdbc.sqltiming=DEBUG       
logging.level.jdbc.audit=OFF             
logging.level.jdbc.resultset=OFF         
logging.level.jdbc.resultsettable=DEBUG  
logging.level.jdbc.connection            
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.zaxxer.hikari=OFF
logging.level.javax.sql.DataSource=INFO


######### transaction
## Service에 @Transactional 사용시 Service class가 부모 없이 단독 사용시 에러 방지
spring.aop.proxy-target-class=true




######################### JSP
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp
